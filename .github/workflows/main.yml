name: Zuri Whiteboard Deployment Pipeline

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [develop, main]
  pull_request:
    branches: [main, develop]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    name: yarn build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
        
        # This job is to cache the node modules in order to reduce the time it would take to run
      - name: Use cached node_modules
        uses: c-hive/gha-yarn-cache@v2
        with:
         directory: whiteboard-client

         #this job installs installs yarn dependencies on the github runner
         #and also to build the static files that would be transferred to server later
      - name: install Dependencies
        run: |
          cd whiteboard-client
          npm update
          npm run build     

      - name: Git Pull on Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ZURI_MAIN_HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd /var/www/zc_plugin_whiteboard/
            git clean -fd
            git stash
            git pull

        # this job copies the build folder from GitHub runners to the server with sftp, make sure the paths are correct      
      - name: copy build to server
        uses: Creepios/sftp-action@v1.0.1
        with:
          username: ${{ secrets.USERNAME }}
          host: ${{ secrets.ZURI_MAIN_HOST }}
          password: ${{ secrets.PASSWORD }}
          localPath: './whiteboard-client/build/'
          remotePath: '/var/www/zc_plugin_whiteboard/whiteboard-client/build'

        # this job ensures your processes are restarted after the process to serve your app
      - name: restart pm2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ZURI_MAIN_HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            pm2 reload whiteboard 2>/dev/null || pm2 start app.js --name "whiteboard"
